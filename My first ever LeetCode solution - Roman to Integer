# Intuition
<!-- Describe your first thoughts on how to solve this problem. -->
First, put all the roman numerals in a dictionary paired with integer values (I=1, V=5, etc.). Then, check each symbol of the roman numeral input and compare it with the next.
If it is smaller than the next one, it should be subtracted (e.g. in IV, I(1) is smaller than V(5), so IV is 5-1=4).

# Approach
The idea was to put all of the integer values in a list to later sum them all up. This would account for consecutive symbols (e.g. II, MMM etc.) and for the subtractions.
The only change needed to the list, is that the numbers to be subtracted need to have a negative sign.

(The bullets below correspond to the comments in the code)

1. First I defined a dictionary with roman numeral - integer value pairs.
2. Then, I created a list out of the roman numeral input. Each symbol of the input was saved in the list with its corresponding integer value. For example, XIV would become [10,1,5]
3. Going through these values one by one, if the next value is higher than the previous, the previous value needs to become negative so that it can be subtracted. For example, the list for XIV would become [10,-1,5] because 1 is smaller than 5.
4. After step three, the list can be summed and you have your integer value. (XIV becomes 10-1+5=14)

# Complexity
- Time complexity:
<!-- Add your time complexity here, e.g. $$O(n)$$ -->
This took me an embarrassing amount of time to solve (~3 hours!). I'm quite out of practice and needed to look up almost all of the syntax.
I also immediately started trying stuff out instead of properly planning my approach on paper beforehand.
This is also my very first solution ever here on Leetcode!

- Space complexity:
<!-- Add your space complexity here, e.g. $$O(n)$$ -->
I don't know how to calculate this (yet), but I guess it's average.

# Code
```
class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """

        # 1. Define dictionary with roman numerals - integer value pairs
        roman = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}

        # 2. List of corresponding integers for counting up the values
        integerlist=[]
        for character in s:
             integerlist.append(roman[character])

        # 3. Account for subtractions by adding a negative sign
        for index in range(1,len(s)):
            if integerlist[index-1] < integerlist[index]:
                integerlist[index-1] = -integerlist[index-1]          
   
        # 4. Just add everything up
        print integerlist
        return sum(integerlist)
        

```
